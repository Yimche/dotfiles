set ratios 1:2:3
# interpreter for shell commands
set shell bash

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# use enter for shell commands
map <enter> shell

# execute current file (must be executable)
map x $$f
map X !$f

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        *) devour xdg-open "$f" ;;
    esac
}}
#cmd open ${{
#    test -L $f && f=$(readlink -f $f)
#    case $(file --mime-type $f -b) in
#        text/*) $EDITOR $fx;;
#        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
#    esac
#}}

# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

# make sure trash folder exists
# %mkdir -p ~/.trash

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.trash

# define a custom 'delete' command
# cmd delete ${{
#     set -f
#     printf "$fx\n"
#     printf "delete?[y/n]"
#     read ans
#     [ $ans = "y" ] && rm -rf $fx
# }}

# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> trash
# map <delete> delete

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

#: Custom UI? {{{
#: Set pistol as Previewer
#: set previewer ~/.go/bin/pistol
#set previewer ~/.config/lf/lf_kitty_preview
#set cleaner ~/.config/lf/lf_kitty_clean
set previewer ~/.config/lf/lfpreview.sh
#set previewer ~/.config/lf/preview

set drawbox true
#set hidden true
set ignorecase true
set icons true
set info size

#}}}

#: Custom Functions {{{ 

cmd mkdir ${{
	printf "Directory Name: "
	read ans
	mkdir $ans
}}

cmd mkfile ${{
	printf "File Name:"
	read ans
	$EDITOR $ans
}}

cmd chmod ${{
	printf"Mode Bits: "
	read ans

	for file in "$fx"
	do
		chmod $ans $file
	done
}}

cmd sudomkfile ${{
	printf "File Name: "
	read ans
	sudo $EDITOR $ans
}}

cmd setwallpaper ${{
	cp "$f" ~/.config/wall.png && feh --bg-fill --no-fehbg "$f"
  betterlockscreen -u ~/.config/wall.png
  cp "$f" /usr/share/backgrounds/wall.png
}}

#: Archive bindings
cmd unarchive ${{
	case "$f" in
		*.zip) unzip "$f" ;;
		*.tar.gz) tar -xzvf "$f" ;;
		*.tar.bz2) tar -xjvf "$f" ;;
		*.tar) tar -xvf "$f" ;;
		*) echo "Unsupported format" ;;
	esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"

#: Trash
cmd trash %trash-put $fx
cmd restore %trash-restore
#: }}}

#: Custom Mappings {{{
map md mkdir
map mf mkfile
map ch chmod
map smk sudomkfile
map bg setwallpaper
map . set hidden!
map du calcdirsize

map g. cd ~/
map gd cd ~/Documents
map gD cd ~/Downloads
map gpw cd ~/Pictures/wallpapers
map gT cd ~/.local/share/Trash/files
map gm cd /run/media/julian
map gv cd ~/Videos
map gu cd ~/Documents/uni/

map r rename
map H top
map L bottom
map R reload
map C clear
map U unselect
map dd cut
map dD trash
map u restore

# Remove some defaults
map m
map o
map "'"
map '"'
map d
map c
map f

# File Openers
map e $$EDITOR "$f"

#:}}}
